pluginManagement {
    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == 'io.spring.propdeps') {
                useModule "io.spring.gradle:propdeps-plugin:${requested.version}"
            }
        }
    }

    repositories {
        gradlePluginPortal()
        maven {
            url 'https://repo.spring.io/plugins-release/'
        }
    }
}

rootProject.name = 'netflix-evcache-spring-parent'

include 'evcache-client-spring'
include 'evcache-client-spring-boot-autoconfigure'
include 'evcache-client-spring-boot-starter'
include 'evcache-client-spring-cloud-autoconfigure'
include 'evcache-client-spring-cloud-starter'
include 'evcache-server-spring-cloud-autoconfigure'
include 'evcache-server-spring-cloud-starter'

include 'samples:spring-sample'
include 'samples:spring-boot-sample'
include 'samples:spring-cloud-sample'
include 'samples:evcache-server-sample'
include 'samples:eureka-server-sample'
